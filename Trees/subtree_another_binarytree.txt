/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNifIode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* rt1, TreeNode* rt2)
    {
        if(rt1==NULL || rt2==NULL)
            return rt1==rt2;
        else if(rt1->val==rt2->val)
            return (isSameTree(rt1->left,rt2->left)  && isSameTree(rt1->right,rt2->right));
        else
            return false;
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) 
    {
        if(root==NULL)
            return false;
        else if(isSameTree(root,subRoot))
            return true;
        else
            return (isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot));
    }
    
    
};