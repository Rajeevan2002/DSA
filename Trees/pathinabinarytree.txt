/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root,vector<string> &ans,string s)
    {
        if(root->left==NULL && root->right==NULL)
        {
            s.append(to_string(root->val));
            ans.push_back(s);
            s.pop_back();
            return;
        }
        
        s.append(to_string(root->val)+"->");
        if(root->left)
            find(root->left,ans,s);
        if(root->right)
            find(root->right,ans,s);
        s.pop_back();
        return;
    }
    vector<string> binaryTreePaths(TreeNode* root) 
    {
        string s="";
        vector<string> ans;
        find(root,ans,s);
        return ans;
        
    }
};