/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root,int targetSum,vector<int> dummy,vector<vector<int>> &ans)
    {
        if(targetSum==root->val && root->left==NULL && root->right==NULL)
        {
            dummy.push_back(targetSum);
            ans.push_back(dummy);
            dummy.pop_back();
            return;
        }
        dummy.push_back(root->val);
        if(root->left)
            find(root->left,targetSum-root->val,dummy,ans);
        if(root->right)
            find(root->right,targetSum-root->val,dummy,ans);
        dummy.pop_back();
        
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) 
    {
        
        vector<vector<int>> ans;
        if(root==NULL)
            return ans;
        vector<int> dummy;
        find(root,targetSum,dummy,ans);
        return ans;
        
    }
};