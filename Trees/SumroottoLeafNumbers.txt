/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root,int temp,int &sum)
    {
        if(!root->left && !root->right)
        {
            temp+=root->val;
            sum+=temp;
            return;
        }
        temp+=root->val;
        if(root->left)
        {
            temp*=10;
            find(root->left,temp,sum);
            temp/=10;
        }
        
        if(root->right)
        {
            temp*=10;
            find(root->right,temp,sum);
            temp/=10;
        }
    }
    int sumNumbers(TreeNode* root) 
    {
        int sum=0,temp=0;
        if(root==NULL)
            return 0;
        find(root,temp,sum);
        return sum;
        
    }
};